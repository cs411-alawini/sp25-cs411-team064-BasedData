This is our stored procedure and transaction code in server.js!

app.post('/submit-review/:drugId/:userId', (req, res) => {
  const drugId = req.params.drugId;
  const userId = req.params.userId;
  const { rating, comment } = req.body;

  connection.beginTransaction((err) => {
    if (err) {
      console.error('Error starting transaction:', err);
      return res.status(500).send('Database transaction error');
    }

    const callProc = 'CALL insert_review_and_count(?, ?, ?, ?, @review_count)';
    connection.query(callProc, [userId, drugId, comment, rating], (err) => {
      if (err) {
        console.error('Error calling stored procedure:', err);
        return connection.rollback(() => {
          res.status(500).send('Database error inserting review');
        });
      }

      // Now run your advanced SELECT
      const advancedSelect = `
        SELECT dr.Review_ID, u.User_ID, u.Age, dr.Rating, dr.Comment,
          (SELECT AVG(dr2.Rating) FROM DRUG_REVIEW dr2 WHERE dr2.Drug_ID = dr.Drug_ID) AS Avg_Drug_Rating
        FROM DRUG_REVIEW dr
        JOIN USERS u ON dr.User_ID = u.User_ID
        JOIN DRUGS d ON dr.Drug_ID = d.Drug_ID
        WHERE dr.Drug_ID = ?
        ORDER BY u.Age ASC;
      `;

      connection.query(advancedSelect, [drugId], (err2, reviewList) => {
        if (err2) {
          console.error('Error running advanced select:', err2);
          return connection.rollback(() => {
            res.status(500).send('Database error during review retrieval');
          });
        }

        connection.commit((err) => {
          if (err) {
            return connection.rollback(() => {
              console.error('Error committing transaction:', err);
              res.status(500).send('Commit error');
            });
          }

          // After commit, render a new page showing all reviews for the drug
          res.render('reviewListAfterSubmit', {
            userId,
            drugId,
            reviewList
          });
        });
      });
    });
  });
});


This is the stored procedure being called in the database:


CREATE PROCEDURE insert_review_and_count(
  IN p_user_id INT,
  IN p_drug_id INT,
  IN p_comment VARCHAR(1000),
  IN p_rating INT,
  OUT review_count INT
)
BEGIN
  -- Insert the review
  INSERT INTO DRUG_REVIEW (User_ID, Drug_ID, Comment, Rating)
  VALUES (p_user_id, p_drug_id, p_comment, p_rating);

  -- Advanced query: count how many reviews the user has
  SELECT COUNT(*) INTO review_count
  FROM DRUG_REVIEW
  WHERE User_ID = p_user_id;
END;
